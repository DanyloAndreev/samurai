{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","className","classes","dialog","to","id","name","Message","message","maxLength100","maxLength","ReduxAddMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","Dialogs","dialogsItems","dialogsData","map","key","messageItems","messagesData","dialogs","messages","formData","addMessage","DialogsContainer","this","React","Component","compose","connect","state","messageReducer","newMessageText","dispatch","addNewMessageActionCreator","withRouter"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8ICUnKC,EAPK,SAACC,GACjB,OACI,yBAAKC,UAAWC,IAAQC,QACpB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QCEzCC,EANC,SAACP,GACb,OACI,yBAAKC,UAAWC,IAAQM,SAAUR,EAAMQ,U,kCC2C1CC,EAAeC,YAAU,KAgBzBC,EAAsBC,YAAU,CACpCC,KAAM,cADoBD,EAfL,SAACZ,GACtB,OACE,0BAAMc,SAAUd,EAAMe,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAM,aAGV,mDASSe,EAvDC,SAACrB,GACf,IAAIsB,EAAetB,EAAMuB,YAAYC,KAAI,SAACrB,GAAD,OACvC,kBAAC,EAAD,CAAaG,KAAMH,EAAOG,KAAMmB,IAAKtB,EAAOE,GAAIA,GAAIF,EAAOE,QAGzDqB,EAAe1B,EAAM2B,aAAaH,KAAI,SAAChB,GAAD,OACxC,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAkB5B,OACE,6BACE,yBAAKP,UAAWC,IAAQ0B,SACtB,yBAAK3B,UAAWC,IAAQoB,cAAeA,GACvC,yBAAKrB,UAAWC,IAAQ2B,UAAWH,IAErC,kBAACf,EAAD,CAAqBG,SAVN,SAACgB,GAClB9B,EAAM+B,WAAWD,EAAStB,c,OCvBxBwB,E,uKAEF,OAAO,kBAAC,EAAYC,KAAKjC,W,GAFEkC,IAAMC,WAkCtBC,sBACbC,aA7BoB,SAACC,GACrB,MAAO,CACLf,YAAae,EAAMC,eAAeV,SAASN,YAC3CI,aAAcW,EAAMC,eAAeV,SAASF,aAC5Ca,eAAgBF,EAAMC,eAAeV,SAASW,mBAIzB,SAACC,GACxB,MAAO,CACLV,WAAY,SAACvB,GACXiC,EAASC,YAA2BlC,SAoBxCmC,IAHaP,CAIbJ","file":"static/js/4.6e61c6ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from \"react\";\nimport classes from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogsItem = (props) => {\n    return (\n        <div className={classes.dialog}>\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink></div>\n    );\n}\n\nexport default DialogsItem","import classes from \"../Dialogs.module.css\";\nimport React from \"react\";\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    );\n}\n\nexport default Message","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport Message from \"./Message/Message\";\n// import {\n//   addNewMessageActionCreator,\n//   updateNewMessageActionCreator,\n// } from \"../../redux/message-reducer\";\n// import { Redirect } from \"react-router-dom\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { TextArea } from \"../common/FormControls/FormControls\";\nimport { maxLength, required } from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n  let dialogsItems = props.dialogsData.map((dialog) => (\n    <DialogsItem name={dialog.name} key={dialog.id} id={dialog.id} />\n  ));\n\n  let messageItems = props.messagesData.map((message) => (\n    <Message message={message.message} />\n  ));\n\n  // let newMessageArea = React.createRef();\n\n  // let onMessageChange = () => {\n  //   let text = newMessageArea.current.value;\n  //   props.updateMessage(text);\n  // };\n  //\n  // let addMessage = () => {\n  //   props.addMessage();\n  // };\n\n  const addMessage = (formData) => {\n    props.addMessage(formData.message);\n  };\n\n  return (\n    <div>\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>{dialogsItems}</div>\n        <div className={classes.messages}>{messageItems}</div>\n      </div>\n      <ReduxAddMessageForm onSubmit={addMessage} />\n    </div>\n  );\n};\n\nconst maxLength100 = maxLength(100);\nconst addMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={TextArea}\n          validate={[required, maxLength100]}\n          name={\"message\"}\n        />\n      </div>\n      <button>Add message</button>\n    </form>\n  );\n};\n\nconst ReduxAddMessageForm = reduxForm({\n  form: \"addMessage\",\n})(addMessageForm);\n\nexport default Dialogs;\n","import React from \"react\";\nimport {\n  addNewMessageActionCreator,\n  // updateNewMessageActionCreator,\n} from \"../../redux/message-reducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect\";\nimport Dialogs from \"./Dialogs\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass DialogsContainer extends React.Component {\n  render() {\n    return <Dialogs {...this.props} />;\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.messageReducer.messages.dialogsData,\n    messagesData: state.messageReducer.messages.messagesData,\n    newMessageText: state.messageReducer.messages.newMessageText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (message) => {\n      dispatch(addNewMessageActionCreator(message));\n    },\n    // updateMessage: (text) => {\n    //   dispatch(updateNewMessageActionCreator(text));\n    // },\n  };\n};\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n\n// const DialogsContainer = connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(AuthRedirectComponent);\n//\n// export default DialogsContainer;\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  // withAuthRedirect,\n  withRouter\n)(DialogsContainer);\n"],"sourceRoot":""}