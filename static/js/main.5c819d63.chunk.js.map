{"version":3,"sources":["redux/message-reducer.js","assets/ColossalMeekCygnet-size_restricted.gif","assets/logo_720.png","components/Login/Login.module.css","components/Navbar/Navbar.module.css","api/api.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/helpers/object.js","redux/user-reducer.js","components/common/Pagination/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/user-selector.js","components/Users/UsersContainer.jsx","utils/helpers/elements/field.js","components/Login/Login.jsx","redux/auth-reducer.js","components/Login/LoginContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/Suspense.js","App.js","serviceWorker.js","index.js","components/Header/Header.module.css","components/Preloader/Preloader.jsx","components/Users/Users.module.css","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControl.module.css","redux/profile-reducer.js"],"names":["initialMessage","messages","dialogsData","id","name","messagesData","message","addNewMessageActionCreator","type","messageReducer","state","action","stateCopy","module","exports","instance","axios","baseURL","usersAPI","getUsers","page","get","then","response","data","followUser","userId","param","put","job","getProfile","console","warn","profileAPI","getStatus","ad","company","updateStatus","status","authAPI","login","email","password","Navbar","className","classes","nav","item","activeClassName","active","to","News","props","Music","Settings","updateObjectInArray","array","propName","propValue","newProps","map","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","isAuthorized","followProgress","follow","unfollow","setFetching","setFollowProgress","userReducer","followed","pageNum","total","filter","Paginator","pagesCount","pages","i","push","onClick","onPageChanged","User","key","user","userFoto","src","avatarUrl","alt","disabled","some","fullName","location","planet","galaxy","Users","getUsersReselect","createSelector","usersReducer","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowProgress","UsersContainer","getUsersThunkCreator","this","Preloader","React","Component","connect","dispatch","first_name","last_name","avatar","setUsers","JSON","parse","sessionStorage","getItem","authorized","alert","createField","placeholder","component","validators","Field","validate","ReduxLoginForm","reduxForm","form","handleSubmit","error","onSubmit","htmlFor","Input","required","formSummaryError","formData","token","setToken","setAuthorized","authReducer","LoginContainer","authorization","loginThunkCreator","expiry","Date","getTime","setItem","stringify","catch","stopSubmit","_error","Header","authButton","logout","header","logo","HeaderContainer","initStatus","appReducer","reducers","combineReducers","profileReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initThunk","path","render","exact","AppContainer","Promise","all","withRouter","SocialNetwork","basename","process","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","loader","Element","input","meta","hasError","touched","formControl","TextArea","value","maxLength","length","ADD_POST","initialProfile","postsData","text","likesCount","userProfile","addPostActionCreator","post","setUserProfile","setUserProfileStatus","getUserProfileThunk","a","profile","getUserProfileStatusThunk","updateUserProfileStatusThunk","newPost","newPostText","postId"],"mappings":"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","file":"static/js/main.5c819d63.chunk.js","sourcesContent":["const ADD_MESSAGE = \"ADD-MESSAGE\";\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\n\nlet initialMessage = {\n  messages: {\n    dialogsData: [\n      {\n        id: \"1\",\n        name: \"Nazar\",\n      },\n      {\n        id: \"2\",\n        name: \"Pavlo\",\n      },\n      {\n        id: \"3\",\n        name: \"Sebbe\",\n      },\n    ],\n    messagesData: [\n      {\n        message: \"Go eat\",\n      },\n      {\n        message: \"Go smoke\",\n      },\n      {\n        message: \"Go work\",\n      },\n    ],\n  },\n};\nconst messageReducer = (state = initialMessage, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE: {\n      let stateCopy = { ...state };\n      stateCopy.messages.messagesData = [\n        ...state.messages.messagesData,\n        { message: action.message },\n      ];\n      return stateCopy;\n    }\n\n    // case UPDATE_NEW_MESSAGE_TEXT:\n    //   return {\n    //     ...state,\n    //     messages: { ...state.messages, newMessageText: action.text },\n    //   };\n    //   {\n    //   let stateCopy = { ...state };\n    //   stateCopy.messages.newMessageText = action.text;\n    //   return stateCopy;\n    // }\n\n    default:\n      return state;\n  }\n};\nexport const addNewMessageActionCreator = (message) => ({\n  type: ADD_MESSAGE,\n  message: message,\n});\n\n// export const updateNewMessageActionCreator = (text) => ({\n//   type: UPDATE_NEW_MESSAGE_TEXT,\n//   text: text,\n// });\n\nexport default messageReducer;\n","module.exports = __webpack_public_path__ + \"static/media/ColossalMeekCygnet-size_restricted.9447da79.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo_720.8fdbb18c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3cy0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  // withCredentials: true,\n  baseURL: \"https://reqres.in/api/users\",\n});\n\nexport const usersAPI = {\n  getUsers(page = 1) {\n    return instance.get(\"?page=\" + page).then((response) => {\n      return response.data;\n    });\n  },\n\n  followUser(userId, param) {\n    return instance.put(\"/\" + userId, { job: param });\n  },\n\n  getProfile(userId) {\n    console.warn(\"Obsolete method. Use profileAPI instead\");\n    return profileAPI.getProfile(userId);\n  },\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(\"/\" + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(\"/\" + userId).then((response) => {\n      return response.data.ad.company;\n    });\n  },\n\n  updateStatus(userId, status) {\n    return instance.put(\"/\" + userId, { job: status }).then((response) => {\n      return response.data.job;\n    });\n  },\n};\n\nexport const authAPI = {\n  login(email, password) {\n    return axios.post(\"https://reqres.in/api/login\", {\n      // email: \"eve.holt@reqres.in\",\n      // password: \"cityslicka\",\n      email: email,\n      password: password,\n    });\n  },\n};\n","import React from \"react\";\nimport classes from \"./Navbar.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink activeClassName={classes.active} to=\"/profile\">\n          Profile\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink activeClassName={classes.active} to=\"/dialogs\">\n          Messages\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink activeClassName={classes.active} to=\"/users\">\n          Users\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink activeClassName={classes.active} to=\"/news\">\n          News\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink activeClassName={classes.active} to=\"/music\">\n          Music\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink activeClassName={classes.active} to=\"/settings\">\n          Setting\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    );\n}\n\nexport default News\n","import React from 'react';\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    );\n}\n\nexport default Music\n","import React from 'react';\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\nexport default Settings\n","export const updateObjectInArray = (array, propName, propValue, newProps) => {\n  return array.map((item) => {\n    if (item[propName] === propValue) {\n      return {\n        ...item,\n        ...newProps,\n      };\n    }\n    return item;\n  });\n};\n","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/helpers/object\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst SET_FETCHING = \"SET_FETCHING\";\nconst CHECK_AUTHORIZED = \"CHECK_AUTHORIZED\";\nconst FOLLOW_PROGRESS = \"FOLLOW_PROGRESS\";\n\nconst BASE_URL = \"https://reqres.in/api/users\";\n\n// let initialState = {\n//   users: [\n//     {\n//       id: 1,\n//       fullName: \"Daniel\",\n//       status: \"Creator\",\n//       location: { planet: \"Earth\", galaxy: \"Milky way\" },\n//       followed: false,\n//       avatarUrl:\n//         \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSxLkbtTa0kfmKizxJgqECQLdlt_xq1R2jEQQ&usqp=CAU\",\n//     },\n//     {\n//       id: 2,\n//       fullName: \"Julia\",\n//       status: \"Dreamer\",\n//       location: { planet: \"Earth\", galaxy: \"Milky way\" },\n//       followed: true,\n//       avatarUrl:\n//         \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSxLkbtTa0kfmKizxJgqECQLdlt_xq1R2jEQQ&usqp=CAU\",\n//     },\n//     {\n//       id: 3,\n//       fullName: \"Oleg\",\n//       status: \"Future\",\n//       location: { planet: \"Earth\", galaxy: \"Milky way\" },\n//       followed: true,\n//       avatarUrl:\n//         \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSxLkbtTa0kfmKizxJgqECQLdlt_xq1R2jEQQ&usqp=CAU\",\n//     },\n//   ],\n//\n// };\nlet initialState = {\n  users: [],\n  pageSize: 6,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  isAuthorized: false,\n  followProgress: [],\n};\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, \"id\", action.userId, {\n          followed: true,\n        }),\n        // users: state.users.map((user) => {\n        //   if (user.id === action.userId) {\n        //     return { ...user, followed: true };\n        //   }\n        //   return user;\n        // }),\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, \"id\", action.userId, {\n          followed: false,\n        }),\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: [...action.users],\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.pageNum,\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.total,\n      };\n    case SET_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    case CHECK_AUTHORIZED:\n      return {\n        ...state,\n        isAuthorized: action.isAuthorized,\n      };\n    case FOLLOW_PROGRESS:\n      return {\n        ...state,\n        followProgress: action.followProgress\n          ? [...state.followProgress, action.id]\n          : state.followProgress.filter((id) => id != action.id),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const follow = (userId) => ({ type: FOLLOW, userId });\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (pageNum) => ({\n  type: SET_CURRENT_PAGE,\n  pageNum,\n});\nexport const setTotalUsersCount = (total) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  total,\n});\nexport const setFetching = (isFetching) => ({\n  type: SET_FETCHING,\n  isFetching,\n});\nexport const checkAuthorized = (isAuthorized) => ({\n  type: CHECK_AUTHORIZED,\n  isAuthorized,\n});\nexport const setFollowProgress = (followProgress, id) => ({\n  type: FOLLOW_PROGRESS,\n  followProgress,\n  id,\n});\n\n//thunk\nexport const getUsersThunkCreator = (page) => {\n  return (dispatch) => {\n    dispatch(setFetching(true));\n    usersAPI.getUsers(page).then((data) => {\n      let users = data.data.map((user) => ({\n        id: user.id,\n        fullName: user.first_name + \" \" + user.last_name,\n        status: \"Creator\",\n        location: { planet: \"Earth\", galaxy: \"Milky way\" },\n        followed: false,\n        avatarUrl: user.avatar,\n      }));\n      dispatch(setCurrentPage(page));\n      dispatch(setFetching(false));\n      dispatch(setUsers(users));\n      dispatch(setTotalUsersCount(data.total));\n    });\n  };\n};\n\nexport const followUser = (userId, param) => {\n  return (dispatch) => {\n    dispatch(setFollowProgress(true, userId));\n    let isAuthorized = JSON.parse(sessionStorage.getItem(\"isAuthorized\"))\n      .authorized;\n    if (isAuthorized) {\n      usersAPI.followUser(userId, param).then(() => {\n        debugger;\n        if (param === \"1\") {\n          dispatch(follow(userId));\n        } else {\n          dispatch(unfollow(userId));\n        }\n      });\n      dispatch(setFollowProgress(false, userId));\n    } else {\n      dispatch(setFollowProgress(false, userId));\n      alert(\"You are not authorized\");\n    }\n  };\n};\nexport default userReducer;\n","import classes from \"../../Users/Users.module.css\";\nimport React from \"react\";\n\nexport const Paginator = (props) => {\n  let pagesCount = props.totalUsersCount / props.pageSize;\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  return (\n    <div>\n      {pages.map((page) => {\n        return (\n          <span\n            onClick={() => props.onPageChanged(page)}\n            className={page === props.currentPage && classes.active}\n          >\n            {page}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n","import { NavLink } from \"react-router-dom\";\nimport classes from \"./Users.module.css\";\nimport React from \"react\";\n\nexport const User = (data) => {\n  return (\n    <div key={data.user.id}>\n      <span>\n        <div>\n          <NavLink to={\"/profile/\" + data.user.id}>\n            <img\n              className={classes.userFoto}\n              src={data.user.avatarUrl}\n              alt=\"Profile foto\"\n            />\n          </NavLink>\n        </div>\n        <div>\n          {data.user.followed ? (\n            <button\n              disabled={data.props.followProgress.some(\n                (id) => id === data.user.id\n              )}\n              onClick={() => data.props.unfollow(data.user.id)}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              disabled={data.props.followProgress.some(\n                (id) => id === data.user.id\n              )}\n              onClick={() => data.props.follow(data.user.id)}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </span>\n      <span>\n        <span>\n          <div>{data.user.fullName}</div>\n          <div>{data.user.status}</div>\n        </span>\n        <span>\n          <div>{data.user.location.planet}</div>\n          <div>{data.user.location.galaxy}</div>\n        </span>\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Paginator } from \"../common/Pagination/Paginator\";\nimport { User } from \"./User\";\n\nlet Users = (props) => {\n  return (\n    <div>\n      <Paginator {...props} />\n      <div>\n        {props.users.map((user) => (\n          <User user={user} props={props} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","import { createSelector } from \"reselect\";\n\nexport const getUsers = (state) => {\n  return state.usersReducer.users;\n};\n\nexport const getUsersReselect = createSelector(getUsers, (users) => {\n  return users.filter((user) => true);\n});\nexport const getPageSize = (state) => {\n  return state.usersReducer.pageSize;\n};\nexport const getTotalUsersCount = (state) => {\n  return state.usersReducer.totalUsersCount;\n};\nexport const getCurrentPage = (state) => {\n  return state.usersReducer.currentPage;\n};\nexport const getIsFetching = (state) => {\n  return state.usersReducer.isFetching;\n};\nexport const getFollowProgress = (state) => {\n  return state.usersReducer.users;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  follow,\n  followUser,\n  getUsersThunkCreator,\n  setFollowProgress,\n  unfollow,\n} from \"../../redux/user-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../Preloader/Preloader\";\nimport {\n  getCurrentPage,\n  getFollowProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n  getUsersReselect,\n} from \"../../redux/user-selector\";\n\nclass UsersContainer extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.onPageChanged = this.onPageChanged.bind(this); // to use as method, not a callback\n  // }\n  componentDidMount() {\n    this.props.getUsersThunkCreator(this.props.currentPage);\n  }\n\n  onPageChanged = (page) => {\n    this.props.getUsersThunkCreator(page);\n  };\n\n  follow = (userId) => {\n    this.props.followUser(userId, \"1\");\n  };\n\n  unfollow = (userId) => {\n    this.props.followUser(userId, \"0\");\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching && <Preloader />}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          users={this.props.users}\n          onPageChanged={this.onPageChanged}\n          follow={this.follow}\n          unfollow={this.unfollow}\n          followProgress={this.props.followProgress}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: getUsersReselect(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followProgress: getFollowProgress(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setFollowProgress,\n  getUsersThunkCreator,\n  followUser,\n})(UsersContainer);\n","import { Field } from \"redux-form\";\nimport React from \"react\";\n\nexport const createField = (\n  name,\n  placeholder,\n  component,\n  validators,\n  props\n) => (\n  <Field\n    name={name}\n    placeholder={placeholder}\n    component={component}\n    validate={validators}\n    {...props}\n  />\n);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../common/FormControls/FormControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Login.module.css\";\nimport { createField } from \"../../utils/helpers/elements/field\";\n\nconst LoginForm = ({ handleSubmit, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"email\">Email</label>\n      <div>\n        {/*<Field*/}\n        {/*  component={Input}*/}\n        {/*  validate={[required]}*/}\n        {/*  placeholder={\"email\"}*/}\n        {/*  name={\"email\"}*/}\n        {/*/>*/}\n        {createField(\"email\", \"email\", Input, [required])}\n      </div>\n      <label htmlFor=\"password\">Password</label>\n      <div>\n        {createField(\"password\", \"password\", Input, [required], {\n          type: \"password\",\n        })}\n      </div>\n      <div>\n        {createField(\"remember\", null, \"input\", null, {\n          type: \"checkbox\",\n        })}\n        Remember me\n      </div>\n      {error && <div className={classes.formSummaryError}>{error}</div>}\n\n      <button>Login</button>\n    </form>\n  );\n};\nconst ReduxLoginForm = reduxForm({\n  form: \"login\",\n})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.onSubmit(formData.email, formData.password);\n  };\n\n  // if (JSON.parse(props.isAuthorized).authorized) {\n  //   return <Redirect to={\"/profile\"} />;\n  // }\n  return (\n    <div>\n      <h1>LOGIN</h1>\n      <ReduxLoginForm onSubmit={onSubmit} />\n    </div>\n  );\n  // <span onClick={() => props.login(user.id)}>Login</span>;\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthorized: sessionStorage.getItem(\"isAuthorized\"),\n});\n\nexport default connect(mapStateToProps, {})(Login);\n","import React from \"react\";\nimport { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_TOKEN = \"SET_TOKEN\";\nconst SET_AUTHORAIZED = \"SET_AUTHORAIZED\";\nlet initialState = {\n  token: null,\n  isAuthorized:\n    sessionStorage.getItem(\"isAuthorized\") === null\n      ? false\n      : sessionStorage.getItem(\"isAuthorized\"),\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TOKEN:\n      return {\n        ...state,\n        token: action.token,\n      };\n    case SET_AUTHORAIZED:\n      return {\n        ...state,\n        isAuthorized: action.isAuthorized,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setToken = (token) => ({\n  type: SET_TOKEN,\n  token: token,\n});\n\nexport const setAuthorized = (isAuthorized) => ({\n  type: SET_AUTHORAIZED,\n  isAuthorized: isAuthorized,\n});\n\n//thunk\nexport const loginThunkCreator = (email, password) => {\n  return (dispatch) => {\n    authAPI\n      .login(email, password)\n      .then((response) => {\n        if (response.data.token) {\n          dispatch(setToken(response.data.token));\n          let now = new Date();\n          const authorized = {\n            authorized: true,\n            expiry: now.getTime(),\n          };\n          sessionStorage.setItem(\"isAuthorized\", JSON.stringify(authorized));\n          dispatch(setAuthorized(JSON.stringify(authorized)));\n        }\n      })\n      .catch((error) => {\n        dispatch(stopSubmit(\"login\", { _error: error.response.data.error }));\n      });\n  };\n};\n\nexport default authReducer;\n","import React from \"react\";\nimport Login from \"./Login\";\nimport { connect } from \"react-redux\";\nimport {\n  loginThunkCreator,\n  setAuthorized,\n  setToken,\n} from \"../../redux/auth-reducer\";\n\nclass LoginContainer extends React.Component {\n  authorization = (email, password) => {\n    this.props.loginThunkCreator(email, password);\n  };\n  render() {\n    return <Login {...this.props} onSubmit={this.authorization} />;\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    token: state.authReducer.token,\n    isAuthorized: state.authReducer.isAuthorized,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setToken,\n  setAuthorized,\n  loginThunkCreator,\n})(LoginContainer);\n","import React from \"react\";\nimport classes from \"./Header.module.css\";\nimport logo from \"../../assets/logo_720.png\";\nimport LoginContainer from \"../Login/LoginContainer\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = (props) => {\n  let authButton;\n  let isAuthorized = JSON.parse(props.isAuthorized).authorized;\n  if (isAuthorized) {\n    authButton = (\n      <button\n        onClick={() => {\n          props.logout();\n        }}\n      >\n        Log out\n      </button>\n    );\n  } else {\n    authButton = (\n      <NavLink className={classes.token} to=\"/login\">\n        {isAuthorized ? \"Logged in\" : \"Login\"}\n      </NavLink>\n      // <div\n      //   onClick={() => {\n      //     return ;\n      //     // props.authorization();\n      //   }}\n      // >\n      //   {isAuthorized ? \"Logged in\" : \"Login\"}\n      // </div>\n    );\n  }\n  return (\n    <header className={classes.header}>\n      <img src={logo} alt=\"aviasecrets\" />\n      <div className={classes.login}>\n        {authButton}\n        <LoginContainer />\n      </div>\n      <span className={classes.token}>{isAuthorized && \"true\"}</span>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { setToken, setAuthorized } from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n  logout = () => {\n    const authorized = {\n      authorized: false,\n      expiry: 0,\n    };\n    sessionStorage.setItem(\"isAuthorized\", JSON.stringify(authorized));\n    this.props.setAuthorized(false);\n  };\n\n  render() {\n    return <Header {...this.props} logout={this.logout} />;\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    token: state.authReducer.token,\n    isAuthorized: state.authReducer.isAuthorized,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setToken,\n  setAuthorized,\n})(HeaderContainer);\n","import React from \"react\";\nconst INIT_STATUS = \"INIT_STATUS\";\nlet initialState = {\n  initStatus: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_STATUS:\n      return {\n        ...state,\n        initStatus: action.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initialize = (status) => ({\n  type: INIT_STATUS,\n  status: status,\n});\n\nexport const initThunk = () => (dispatch) => {\n  Promise.all([\n    // new Promise((resolve) => setTimeout(() => resolve(1), 3000)), // 1\n    // new Promise((resolve) => setTimeout(() => resolve(1), 1000)), // 1\n  ]).then(() => {\n    dispatch(initialize(true));\n  });\n};\n\nexport default appReducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport messageReducer from \"./message-reducer\";\nimport usersReducer from \"./user-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleWare from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\";\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n  profileReducer,\n  messageReducer,\n  usersReducer,\n  authReducer,\n  appReducer,\n  form: formReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunkMiddleWare))\n);\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare));\nexport default store;\n","import React, { Component, Suspense } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport const withSuspense = (Component) => {\n  return (props) => {\n    return (\n      <Suspense fallback={<div>Загрузка...</div>}>\n        <Component {...props} />\n      </Suspense>\n    );\n  };\n};\n","import React, { Suspense } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport { compose } from \"redux\";\nimport { connect, Provider } from \"react-redux\";\nimport { initThunk } from \"./redux/app-reducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport { withSuspense } from \"./hoc/Suspense\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./components/Profile/ProfileContainer\")\n);\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initThunk();\n  }\n\n  render() {\n    if (!this.props.initStatus) {\n      return <Preloader />;\n    } else {\n      return (\n        <div className={\"wrapper\"}>\n          <HeaderContainer />\n          <Navbar />\n          <div className={\"wrapper-content\"}>\n            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n            <Route\n              path=\"/profile/:userId?\"\n              render={withSuspense(ProfileContainer)}\n            />\n            <Route exact path=\"/users\" render={() => <UsersContainer />} />\n            <Route exact path=\"/news\" render={() => <News />} />\n            <Route exact path=\"/music\" render={() => <Music />} />\n            <Route exact path=\"/settings\" render={() => <Settings />} />\n            <Route exact path=\"/login\" render={() => <LoginContainer />} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initStatus: state.appReducer.initStatus,\n});\nconst AppContainer = compose(\n  connect(mapStateToProps, { initThunk }),\n  withRouter\n)(App);\nconst SocialNetwork = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\nexport default SocialNetwork;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"ProfileInfo is cached for offline use.\" message.\n              console.log('ProfileInfo is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport SocialNetwork from \"./App\";\n\n// let renderEntireTree = () => {\nReactDOM.render(<SocialNetwork />, document.getElementById(\"root\"));\n// };\n\n// renderEntireTree();\n//\n// store.subscribe(() => {\n//   renderEntireTree();\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nwindow.store = store;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login\":\"Header_login__3V3Qa\",\"token\":\"Header_token__X84J4\"};","import React from \"react\";\nimport loader from \"../../assets/ColossalMeekCygnet-size_restricted.gif\";\n\nconst Preloader = () => {\n  return <img src={loader} alt=\"\" />;\n};\nexport default Preloader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFoto\":\"Users_userFoto__SMlLW\",\"active\":\"Users_active__igCDk\"};","import React from \"react\";\nimport classes from \"./FormControl.module.css\";\n\nconst Element = (Element) => ({ input, meta, ...props }) => {\n  let hasError = meta.touched && meta.error;\n\n  return (\n    <div className={classes.formControl + \" \" + (hasError && classes.error)}>\n      <div>\n        <Element {...props} {...input} />\n      </div>\n      <div>{hasError && <span>{meta.error}</span>}</div>\n    </div>\n  );\n};\n\nexport const TextArea = Element(\"textarea\");\nexport const Input = Element(\"input\");\n","export const required = (value) => {\n  if (value) return undefined;\n\n  return \"This field is required\";\n};\n\nexport const maxLength = (maxLength) => (value) => {\n  if (value && value.length > maxLength) {\n    return `Text length must be under ${maxLength}`;\n  }\n\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2LKrZ\",\"error\":\"FormControl_error__2AXtT\"};","import { profileAPI, usersAPI } from \"../api/api\";\n\nconst ADD_POST = \"profile/ADD-POST\";\n// const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\";\nconst SET_USER_PROFILE_STATUS = \"profile/SET_USER_PROFILE_STATUS\";\nconst DELETE_POST = \"profile/DELETE_POST\";\n\nlet initialProfile = {\n  postsData: [\n    {\n      id: 1,\n      text: \"1. Hi from attribute message\",\n      likesCount: 1,\n    },\n    {\n      id: 2,\n      text: \"2. Hi from attribute message\",\n      likesCount: 1,\n    },\n    {\n      id: 3,\n      text: \"3. Hi from attribute message\",\n      likesCount: 1,\n    },\n  ],\n  // newPostText: \"new post text!\",\n  userProfile: null,\n  status: \"\",\n};\nconst profileReducer = (state = initialProfile, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {\n        id: 4,\n        text: action.post,\n        likesCount: 0,\n      };\n\n      // let stateCopy = { ...state };\n      // stateCopy.postsData = [...state.postsData];\n      //\n      // stateCopy.postsData.push(newPost);\n      // stateCopy.newPostText = \"\";\n      // return stateCopy;\n\n      return {\n        ...state,\n        postsData: [...state.postsData, newPost],\n        newPostText: \"\",\n      };\n    }\n    // case UPDATE_NEW_POST_TEXT:\n    //   return {\n    //     ...state,\n    //     newPostText: action.text,\n    //   };\n    //\n    // let stateCopy = { ...state };\n    // stateCopy.newPostText = action.text;\n    // return stateCopy;\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        userProfile: action.userProfile,\n      };\n    case SET_USER_PROFILE_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        postsData: state.postsData.filter((post) => post.id !== action.postId),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = (post) => ({ type: ADD_POST, post: post });\nexport const deletePostActionCreator = (postId) => ({\n  type: DELETE_POST,\n  postId: postId,\n});\n\n// export const updateNewPostTextActionCreator = (text) => ({\n//   type: UPDATE_NEW_POST_TEXT,\n//   text: text,\n// });\n\nexport const setUserProfile = (data) => ({\n  type: SET_USER_PROFILE,\n  userProfile: data,\n});\nexport const setUserProfileStatus = (status) => ({\n  type: SET_USER_PROFILE_STATUS,\n  status: status,\n});\n\n// export const getUserProfileThunk = (userId) => {\n//   return (dispatch) => {\n//     usersAPI.getProfile(userId).then((response) => {\n//       dispatch(setUserProfile(response.data));\n//     });\n//   };\n// };\n\n//use async await instead of promise.then. Code looks better and it looks like sync code\nexport const getUserProfileThunk = (userId) => {\n  return async (dispatch) => {\n    let profile = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(profile.data));\n  };\n};\n\nexport const getUserProfileStatusThunk = (userId) => {\n  return (dispatch) => {\n    profileAPI.getStatus(userId).then((status) => {\n      dispatch(setUserProfileStatus(status));\n    });\n  };\n};\nexport const updateUserProfileStatusThunk = (userId, status) => {\n  return (dispatch) => {\n    profileAPI.updateStatus(userId, status).then((status) => {\n      dispatch(setUserProfileStatus(status));\n    });\n  };\n};\n\nexport default profileReducer;\n"],"sourceRoot":""}