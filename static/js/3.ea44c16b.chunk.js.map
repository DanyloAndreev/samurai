{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatus/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likesCount","MyPosts","React","memo","postsElements","postsData","reverse","map","post","text","postsBlock","ReduxAddPost","onSubmit","formData","addPost","posts","maxLength10","maxLength","reduxForm","form","handleSubmit","Field","component","TextArea","name","validate","required","MyPostsContainer","connect","state","profileReducer","newPostText","dispatch","addPostActionCreator","Component","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","userId","type","ProfileInfo","userProfile","descriptionBlock","data","first_name","last_name","avatar","ProfileStatusHook","id","email","Preloader","Profile","ProfileContainer","this","match","params","getUserProfileThunk","getUserProfileStatusThunk","updateUserProfileStatusThunk","compose","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.ea44c16b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import classes from './Post.module.css'\nimport React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <img src=\"https://catalog-telegram.info/storage/1161/aviasecrets-1577995622.jpg\" alt=\"\"/>\n            {props.message}\n            <span> like </span> {props.likesCount}\n        </div>\n    );\n}\n\nexport default Post\n","import classes from \"./MyPosts.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLength, required } from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../common/FormControls/FormControls\";\n\nconst MyPosts = React.memo((props) => {\n  //no side eeffect inside function\n  //idempotence,determine. same arguments = same return\n  //immutable. Function may not change outside data\n  let postsElements = [...props.postsData]\n    .reverse()\n    .map((post) => <Post message={post.text} likesCount={post.likesCount} />);\n  // let newPostArea = React.createRef();\n\n  let addPost = (formData) => {\n    props.addPost(formData.post);\n  };\n\n  // let onPostChange = () => {\n  //   let text = newPostArea.current.value;\n  //   props.updateNewPostText(text);\n  // };\n\n  //function must return something\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My Posts</h3>\n      <div>\n        <ReduxAddPost onSubmit={addPost} />\n      </div>\n      <div className={classes.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst maxLength10 = maxLength(10);\n\nconst AddPost = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        component={TextArea}\n        name={\"post\"}\n        validate={[required, maxLength10]}\n      />\n      <button>Add post</button>\n    </form>\n  );\n};\n\nconst ReduxAddPost = reduxForm({\n  form: \"addPost\",\n})(AddPost);\n\nexport default MyPosts;\n","import React from \"react\";\nimport {\n  addPostActionCreator,\n  // updateNewPostTextActionCreator,\n} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    postsData: state.profileReducer.postsData,\n    newPostText: state.profileReducer.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    // updateNewPostText: (text) => {\n    //   dispatch(updateNewPostTextActionCreator(text));\n    // },\n    addPost: (post) => {\n      dispatch(addPostActionCreator(post));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n    });\n  };\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false,\n    });\n    this.props.updateStatus(this.props.userId, this.state.status);\n  };\n\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ status: this.props.status });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {!this.state.editMode && (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>\n              {this.props.status}\n            </span>\n          </div>\n        )}\n        {this.state.editMode && (\n          <div>\n            <input\n              onChange={this.onStatusChange}\n              autoFocus={true}\n              onBlur={this.deactivateEditMode}\n              type=\"text\"\n              value={this.state.status}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n}\nexport default ProfileStatus;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusHooks = (props) => {\n  // let state = useState(true);\n  // let editMode = state[0];\n  // let setEditMode = state[1];\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(props.userId, status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n  return (\n    <>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status}</span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            type=\"text\"\n            value={status}\n          />\n        </div>\n      )}\n    </>\n  );\n};\nexport default ProfileStatusHooks;\n","import React from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../Preloader/Preloader\";\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\nimport ProfileStatusHooks from \"../ProfileStatus/ProfileStatusHook\";\n\nconst ProfileInfo = (props) => {\n  if (!props.userProfile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      {/*<div>*/}\n      {/*  <img*/}\n      {/*    src=\"https://images.pexels.com/photos/945615/pexels-photo-945615.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"*/}\n      {/*    alt=\"Profile Photo\"*/}\n      {/*  />*/}\n      {/*</div>*/}\n      <div className={classes.descriptionBlock}>\n        <div>\n          <span>\n            {props.userProfile.data.first_name +\n              \" \" +\n              props.userProfile.data.last_name}\n          </span>\n        </div>\n        <div>\n          <img src={props.userProfile.data.avatar} alt=\"\" />\n        </div>\n\n        <ProfileStatusHooks\n          status={props.status}\n          userId={props.userProfile.data.id}\n          updateStatus={props.updateStatus}\n        />\n        <div>\n          <span>email: </span>\n          <span>{props.userProfile.data.email}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        userProfile={props.userProfile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  setUserProfile,\n  getUserProfileThunk,\n  getUserProfileStatusThunk,\n  updateUserProfileStatusThunk,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    this.props.getUserProfileThunk(userId);\n    this.props.getUserProfileStatusThunk(userId);\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        userProfile={this.props.userProfile}\n        status={this.props.status}\n        updateStatus={this.props.updateUserProfileStatusThunk}\n      />\n    );\n  }\n}\nlet mapStateToProps = (state) => ({\n  userProfile: state.profileReducer.userProfile,\n  status: state.profileReducer.status,\n});\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n// let routerProfileContainer = withRouter(AuthRedirectComponent);\n//\n// export default connect(mapStateToProps, {\n//   setUserProfile,\n//   getUserProfileThunk,\n// })(routerProfileContainer);\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile,\n    getUserProfileThunk,\n    getUserProfileStatusThunk,\n    updateUserProfileStatusThunk,\n  }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}